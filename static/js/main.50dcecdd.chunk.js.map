{"version":3,"sources":["reportWebVitals.js","h23.js","form.js","card.js","robots.js","myRobot.js","SearchRobot.js","total.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Description","arg","delet","myId","name","email","onClick","event","Form","handleChangeInp","handleSave","cancelBtn","defaultValue","onChange","Card","i","editId","className","alt","src","id","robots","username","MyRobot","handleChange","formSubmit","btnClick","checkBtn","myDef","style","backgroundColor","onSubmit","autoComplete","type","placeholder","required","SearchRobots","searchChange","Total","useState","info","setInfo","myInput","setMyInput","setId","setMydef","preventDefault","setMyId","values","copyTask","ind","findIndex","arg2","splice","fieldName","target","getAttribute","fieldValue","value","copyInfo","inp","findId","length","alert","setCheckBtn","addForm","setAddForm","findLength","copyForm","copyInfoÐº","nanoid","SearchRobot","filter","toLowerCase","includes","trim","map","ReactDOM","render","document","getElementById"],"mappings":"2IAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCUCQ,EAfG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,IAAIC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,KAC1B,OACI,gCACI,6BACKF,EAAIG,OAET,6BACKH,EAAII,QAET,wBAAQC,QAAS,SAACC,GAASL,EAAMK,EAAMN,IAAvC,oBACA,wBAAQK,QAAS,SAACC,GAASJ,EAAKI,EAAMN,IAAtC,sBCOGO,EAjBJ,SAAC,GAA8C,IAA7CP,EAA4C,EAA5CA,IAAIQ,EAAwC,EAAxCA,gBAAgBC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,UACxC,OACJ,8BACI,iCACA,6BACJ,uBAAOP,KAAK,OAAQQ,aAAcX,EAAIG,KAAMS,SAAUJ,MAElD,6BACJ,uBAAOL,KAAK,QAAQQ,aAAcX,EAAII,MAAOQ,SAAUJ,MAEnD,wBAAQH,QAASI,EAAjB,kBACA,wBAAQJ,QAASK,EAAjB,0BCSWG,EAjBJ,SAAC,GAAkE,IAAjEb,EAAgE,EAAhEA,IAAIc,EAA4D,EAA5DA,EAAEb,EAA0D,EAA1DA,MAAMc,EAAoD,EAApDA,OAAOb,EAA6C,EAA7CA,KAAKM,EAAwC,EAAxCA,gBAAgBC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,UAC5D,OACH,qBAAKM,UAAU,OAAf,SAEG,sBAAMA,UAAU,OAAhB,UACH,qBAAMA,UAAU,iBAAiBC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,cACzC,cAAC,WAAD,UACCC,GAAQf,EAAImB,GACb,cAAC,EAAD,CAAMnB,IAAKA,EAAIQ,gBAAiBA,EAAgBC,WAAYA,EAAYC,UAAWA,IAEnF,cAAC,EAAD,CAAaV,IAAKA,EAAKC,MAAOA,EAAOC,KAAMA,QANpBY,MCTlBM,EAAS,CAClB,CACED,GAAI,EACJhB,KAAM,gBACNkB,SAAU,OACVjB,MAAO,qBAET,CACEe,GAAI,EACJhB,KAAM,eACNC,MAAO,qBAET,CACEe,GAAI,EACJhB,KAAM,mBACNC,MAAO,2BAET,CACEe,GAAI,EACJhB,KAAM,mBACNC,MAAO,6BAET,CACEe,GAAI,EACJhB,KAAM,mBACNC,MAAO,4BAET,CACEe,GAAI,EACJhB,KAAM,uBACNC,MAAO,2BAET,CACEe,GAAI,EACJhB,KAAM,kBACNC,MAAO,0BAET,CACEe,GAAI,EACJhB,KAAM,2BACNC,MAAO,wBAET,CACEe,GAAI,EACJhB,KAAM,kBACNC,MAAO,2BAET,CACEe,GAAI,GACJhB,KAAM,qBACNC,MAAO,2B,QC9BEkB,EAjBD,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,aAAaC,EAAsC,EAAtCA,WAAWC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,SAASC,EAAS,EAATA,MACvD,OAAQ,gCAEH,wBAAQX,UAAU,SAASY,MAAOF,EAAS,CAACG,gBAAiB,OAAO,CAACA,gBAAiB,WAAcxB,QAASoB,EAA7G,SAAwHC,EAAW,QAAQ,cACtIA,EACD,8BACI,uBAAMI,SAAUN,EAAYR,UAAU,UAAtC,UACA,uBAAOe,aAAa,MAAMC,KAAK,OAAOhB,UAAU,MAAMiB,YAAY,eAAetB,aAAcgB,EAAOxB,KAAK,OAAOS,SAAUW,EAAcW,SAAS,aACnJ,uBAAO/B,KAAK,QAAO6B,KAAK,OAAMD,aAAa,MAAMf,UAAU,MAAML,aAAcgB,EAAMM,YAAY,iBAAiBC,SAAS,WAAWtB,SAAUW,IAChJ,wBAAQS,KAAK,SAAb,mBAHA,wBAKE,OCJHG,EARI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACI,8BACI,uBAAQJ,KAAK,SAAQhB,UAAU,YAAYJ,SAAUwB,EAAcH,YAAY,sBCkK5EI,EA/JH,WACZ,MAAqBC,mBAASlB,GAA9B,mBAAOmB,EAAP,KAAYC,EAAZ,KACA,EAA2BF,mBAAS,CAChCnC,KAAK,GACLC,MAAM,KAFV,mBAAOqC,EAAP,KAAeC,EAAf,KAIC,EAAqBJ,mBAAS,MAA9B,mBAAOvB,EAAP,KAAc4B,EAAd,KACA,EAAuBL,mBAAS,IAAhC,mBAAOX,EAAP,KAAaiB,EAAb,KAGK1C,EAAK,SAACI,EAAMiC,GAClBjC,EAAMuC,iBACN,IAAMC,EAAQP,EAAKpB,GACnBwB,EAAMG,GAEN,IAAMC,EAAO,CACT5C,KAAKoC,EAAKpC,KACVC,MAAMmC,EAAKnC,OAEfsC,EAAWK,IAIL9C,EAAM,SAACK,EAAMN,GACfM,EAAMuC,iBACN,IAAMG,EAAS,YAAIT,GACbU,EAAID,EAASE,WAAU,SAAAC,GAAI,OAAEA,EAAKhC,IAAInB,EAAImB,MAChD6B,EAASI,OAAOH,EAAI,GACpBT,EAAQQ,IAQNxC,EAAgB,SAACF,GACnBA,EAAMuC,iBACN,IAAMQ,EAAU/C,EAAMgD,OAAOC,aAAa,QACpCC,EAAWlD,EAAMgD,OAAOG,MACxBC,EAAS,eAAIjB,GACnBiB,EAASL,GAAWG,EACnBd,EAAWgB,IAIVjD,EAAW,SAACH,GACdA,EAAMuC,iBACN,IAAMc,EAAI,CACNxC,GAAGJ,EACHZ,KAAKsC,EAAQtC,KACbC,MAAMqC,EAAQrC,OAEbwD,EAAOrB,EAAKW,WAAU,SAAClD,GAAD,OAAOA,EAAImB,IAAIJ,KACrC2C,EAAS,YAAInB,GAEnB,GADAmB,EAASN,OAAOQ,EAAO,EAAED,GACD,GAArBlB,EAAQtC,KAAK0D,QAAmC,GAAtBpB,EAAQrC,MAAMyD,OACvC,OAAOC,MAAM,kCAGhBtB,EAAQkB,GAETf,EAAM,OAKHjC,EAAU,SAACJ,GACbA,EAAMuC,iBACNF,EAAM,OAKV,EAA6BL,oBAAS,GAAtC,mBAAOZ,EAAP,KAAgBqC,EAAhB,KAUA,EAA2BzB,mBAAS,CAChCnC,KAAK,GACLC,MAAM,KAFV,mBAAO4D,EAAP,KAAeC,EAAf,KA4BMC,EAAW3B,EAAKsB,OAclB,OACQ,gCACA,cAAC,EAAD,CAAStC,aAxCF,SAACjB,GAChBA,EAAMuC,iBACN,IAAMQ,EAAU/C,EAAMgD,OAAOC,aAAa,QACpCC,EAAWlD,EAAMgD,OAAOG,MACxBU,EAAS,eAAIH,GACnBG,EAASd,GAAWG,EACpBS,EAAWE,IAmCM1C,SArDN,SAACnB,GACZA,EAAMuC,iBAENkB,GADarC,IAoDIA,SAAUA,EACVF,WAhCJ,SAAClB,GACdA,EAAMuC,iBACN,IAKMuB,EAAU,CALH,CACTjD,GAAGkD,cACHlE,KAAK6D,EAAQ7D,KACbC,MAAM4D,EAAQ5D,QAEH,mBAAYmC,IAC3BC,EAAQ4B,GAERxB,EADa,KAwBIjB,MAAOA,IAE5B,mBAAGX,UAAU,WAAb,oCAA8CkD,KAC7C,cAACI,EAAD,CAAclC,aApBI,SAAC9B,GAChB,IAAMkD,EAAWlD,EAAMgD,OAAOG,MACxBc,EAAOnD,EAAOmD,QAAO,SAAAvE,GAAG,OAAEA,EAAIG,KAAKqE,cAAcC,SACnDjB,EAAWgB,cAAcE,WAE7BlC,EAAQ+B,MAgBL,qBAAKvD,UAAU,OAAf,SACNuB,EAAKoC,KAAI,SAAC3E,EAAIc,GACJ,OACI,cAAC,EAAD,CACAd,IAAKA,EACLc,EAAGA,EACHb,MAAOA,EACPC,KAAMA,EACNa,OAAQA,EACRP,gBAAiBA,EACjBC,WAAYA,EACZC,UAAWA,SAOnB,mBAAGM,UAAU,QAAb,SAAkC,GAAZkD,EAAe,kBAAkB,SC7J9DU,IAASC,OACL,cAAC,EAAD,IAAWC,SAASC,eAAe,SAMvCzF,K","file":"static/js/main.50dcecdd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Description=({arg,delet,myId})=>{\r\n    return(\r\n        <div  >\r\n            <h2 >\r\n                {arg.name}\r\n            </h2>\r\n            <h3 >\r\n                {arg.email}\r\n            </h3>\r\n            <button onClick={(event)=>{delet(event,arg)}}>Delete</button>\r\n            <button onClick={(event)=>{myId(event,arg)}} >edit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description","import React from 'react'\r\n\r\nconst Form=({arg,handleChangeInp,handleSave,cancelBtn})=>{\r\n    return(\r\n<div>\r\n    <form>\r\n    <h2>\r\n<input name='name'  defaultValue={arg.name} onChange={handleChangeInp} ></input>\r\n    </h2>\r\n    <h3>\r\n<input name='email' defaultValue={arg.email} onChange={handleChangeInp} ></input>\r\n    </h3>\r\n    <button onClick={handleSave}>save</button>\r\n    <button onClick={cancelBtn}>cancel</button>\r\n    </form>\r\n</div>\r\n    )\r\n    }\r\n\r\nexport default Form;","import React, { Fragment } from 'react';\r\nimport './index.css'\r\nimport Description from './h23';\r\nimport Form from './form';\r\n\r\nconst Card=({arg,i,delet,editId,myId,handleChangeInp,handleSave,cancelBtn})=>{\r\n    return (\r\n <div className='item'>\r\n \r\n    <div  className='text'key={i} >\r\n <img  className=\"img-responsive\" alt='photo' src={`https://robohash.org/${i}?200*200`}></img>\r\n        <Fragment>\r\n        {editId==arg.id ?  \r\n        <Form arg={arg}handleChangeInp={handleChangeInp}handleSave={handleSave} cancelBtn={cancelBtn} />  \r\n        :   \r\n        <Description arg={arg} delet={delet} myId={myId}/>}\r\n        </Fragment>\r\n    </div>\r\n \r\n</div>\r\n);\r\n}\r\nexport default Card;","export const robots = [\r\n    {\r\n      id: 1,\r\n      name: 'Leanne Graham',\r\n      username: 'Bret',\r\n      email: 'Sincere@april.biz'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Ervin Howell',\r\n      email: 'Shanna@melissa.tv'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Fazliev Shakhboz',\r\n      email: 'Shfazliev1940@gmail.com'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Patricia Lebsack',\r\n      email: 'Julianne.OConner@kory.org'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Chelsey Dietrich',\r\n      email: 'Lucio_Hettinger@annie.ca'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'Mrs. Dennis Schulist',\r\n      email: 'Karley_Dach@jasper.info'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Kurtis Weissnat',\r\n      email: 'Telly.Hoeger@billy.biz'\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Nicholas Runolfsdottir V',\r\n      email: 'Sherwood@rosamond.me'\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'Glenna Reichert',\r\n      email: 'Chaim_McDermott@dana.io'\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'Clementina DuBuque',\r\n      email: 'Rey.Padberg@karina.biz'\r\n    }\r\n  ];\r\n  \r\n      \r\n  ","import React from \"react\";\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\nconst MyRobot=({handleChange,formSubmit,btnClick,checkBtn,myDef})=>{\r\n   return( <div>\r\n\r\n        <button className='btnAdd' style={checkBtn?{backgroundColor: 'red'}:{backgroundColor: '#c2fbd7'} }  onClick={btnClick}>{checkBtn ? 'close':'add robot'}</button>\r\n            {checkBtn ?\r\n            <div>\r\n                <form onSubmit={formSubmit} className='inpForm'>\r\n                <input autoComplete=\"off\" type='text' className=\"inp\" placeholder=\"Enter a name\" defaultValue={myDef} name=\"name\" onChange={handleChange} required=\"required\"/>\r\n                <input name=\"email\"type='text'autoComplete=\"off\" className=\"inp\" defaultValue={myDef}placeholder=\"Enter an email\" required=\"required\" onChange={handleChange}/>\r\n                <button type=\"submit\" >Light</button>                </form>\r\n                </div> \r\n                : '' \r\n                }\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default MyRobot;","import React from \"react\";\r\n\r\nconst SearchRobots=({searchChange})=>{\r\n    return(\r\n        <div>\r\n            <input  type='search'className='searchInp' onChange={searchChange} placeholder=\"search a robot\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchRobots","import React, { Fragment, useState } from 'react';\r\nimport './index.css';\r\nimport Card from './card';\r\nimport { robots } from './robots';\r\nimport {nanoid} from 'nanoid';\r\nimport MyRobot from './myRobot';\r\nimport SearchRobots from './SearchRobot';\r\n\r\nconst Total=()=>{\r\nconst [info,setInfo]=useState(robots);\r\nconst [myInput,setMyInput]=useState({\r\n    name:'',\r\n    email:'' \r\n })\r\n const [editId,setId]=useState(null);\r\n const [myDef,setMydef]=useState('');\r\n\r\n//edit\r\nconst myId=(event,info)=>{\r\nevent.preventDefault();\r\nconst setMyId=info.id;\r\nsetId(setMyId);\r\n\r\nconst values={\r\n    name:info.name,\r\n    email:info.email\r\n}\r\nsetMyInput(values);\r\n}\r\n//**edit */\r\n//delete\r\nconst delet=(event,arg)=>{\r\n    event.preventDefault();\r\n    const copyTask=[...info];\r\n    const ind=copyTask.findIndex(arg2=>arg2.id==arg.id);\r\n    copyTask.splice(ind,1);\r\n    setInfo(copyTask);      \r\n}\r\n//**delete */\r\n\r\n//input onchange\r\n\r\n\r\n\r\nconst handleChangeInp=(event)=>{\r\n    event.preventDefault();\r\n    const fieldName=event.target.getAttribute('name');\r\n    const fieldValue=event.target.value;\r\n    const copyInfo={...myInput};\r\n    copyInfo[fieldName]=fieldValue;\r\n     setMyInput(copyInfo);\r\n}\r\n//--input onchange\r\n//inp Sub\r\nconst handleSave=(event)=>{\r\n    event.preventDefault();\r\n    const inp={\r\n        id:editId,\r\n        name:myInput.name,\r\n        email:myInput.email\r\n    }\r\n   const findId=info.findIndex((arg)=>arg.id==editId);\r\n   const copyInfo=[...info];\r\n   copyInfo.splice(findId,1,inp);\r\n   if(myInput.name.length==0 || myInput.email.length==0){\r\n       return alert('This field should not be empty')\r\n   }\r\n   else{\r\n    setInfo(copyInfo);\r\n   }\r\n   setId(null);\r\n}\r\n//inp Sub--\r\n\r\n//inp cancel\r\nconst cancelBtn=(event)=>{\r\n    event.preventDefault();\r\n    setId(null)\r\n}\r\n//**inp cancel */\r\n\r\n//btnCheck\r\nconst [checkBtn,setCheckBtn]=useState(false);\r\n\r\nconst btnClick=(event)=>{\r\n    event.preventDefault();\r\n    const check=!checkBtn;\r\n    setCheckBtn(check);\r\n}\r\n//btnCheck--\r\n\r\n//addForm\r\nconst [addForm,setAddForm]=useState({\r\n    name:'',\r\n    email:''\r\n});\r\nconst handleChange=(event)=>{\r\n    event.preventDefault();\r\n    const fieldName=event.target.getAttribute('name');\r\n    const fieldValue=event.target.value;\r\n    const copyForm={...addForm};\r\n    copyForm[fieldName]=fieldValue;\r\n    setAddForm(copyForm);\r\n}                \r\n//--addForm\r\n\r\n//FormSub\r\nconst formSubmit=(event)=>{\r\n    event.preventDefault();\r\n    const newVal={\r\n        id:nanoid(),\r\n        name:addForm.name,\r\n        email:addForm.email\r\n    }\r\n    const copyInfoÐº=[newVal,...info];\r\n    setInfo(copyInfoÐº);\r\n    const defVal='';\r\n    setMydef(defVal);\r\n}\r\n//FormSub--\r\nconst findLength=info.length;\r\n\r\n//searchInp\r\nconst searchChange=(event)=>{\r\n    const fieldValue=event.target.value;\r\n    const filter=robots.filter(arg=>arg.name.toLowerCase().includes(\r\n        fieldValue.toLowerCase().trim())\r\n        )\r\n    setInfo(filter);\r\n        \r\n    }\r\n//searchInp--\r\n\r\n\r\n    return(\r\n            <div>        \r\n            <MyRobot handleChange={handleChange}\r\n                     btnClick={btnClick}\r\n                     checkBtn={checkBtn}\r\n                     formSubmit={formSubmit}\r\n                     myDef={myDef}\r\n            />\r\n<p className='numUsers' >{`Number of users: ${findLength}`}</p>\r\n <SearchRobots searchChange={searchChange}/>\r\n       <div className=\"grid\">\r\n{info.map((arg,i) => {\r\n           return(\r\n               <Card \r\n               arg={arg} \r\n               i={i}\r\n               delet={delet} \r\n               myId={myId}\r\n               editId={editId}\r\n               handleChangeInp={handleChangeInp}\r\n               handleSave={handleSave}\r\n               cancelBtn={cancelBtn}\r\n                   />        \r\n           );\r\n    })}\r\n             \r\n       </div>\r\n\r\n       <p className='noRob'>{findLength==0 ?'no robots found':''}</p>\r\n            \r\n         </div>//end\r\n   ) \r\n}\r\nexport default Total;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Total from './total';\nReactDOM.render(\n    <Total/>,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}